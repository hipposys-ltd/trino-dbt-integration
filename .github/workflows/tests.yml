name: Tests

on:
  pull_request:
    branches: [ "main" ]
    paths:
      - 'dbt/**'

jobs:
  filter:
    runs-on: ubuntu-latest
    outputs:
      postgres_changed: ${{ steps.filter.outputs.postgres == 'true' }}
      trino_changed: ${{ steps.filter.outputs.trino == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            postgres:
              - 'dbt/PostgresDbt/**'
            trino:
              - 'dbt/TrinoIngestionDbt/**'

  run-on-trino-changed:
    runs-on: ubuntu-latest
    needs: filter
    if: needs.filter.outputs.trino_changed == 'true'
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dbt-core==1.8.8 dbt-trino==1.8.3 awscli

      - name: Test Changed Models
        env:
          TRINO_HOST: ${{ secrets.TRINO_HOST }}
          TRINO_USER: ${{ secrets.TRINO_USER }}
          TRINO_PASSWORD: ${{ secrets.TRINO_PASSWORD }}
          TRINO_DBNAME: ${{ secrets.TRINO_DBNAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MANIFEST_S3_PATH: ${{ secrets.MANIFEST_S3_PATH }}
          RUN_ID: ${{ github.run_id }}
        run: |
          echo "S3 Manifest Path=$MANIFEST_S3_PATH"
          echo "Setting TRINO_SCHEMA dynamically"
          export TRINO_SCHEMA="dbt_pr_$RUN_ID"
          echo "Checking if DBT manifest exists in S3"
          aws s3 cp $MANIFEST_S3_PATH /prod_manifest/manifest.json || echo "Manifest not found, skipping download"
          dbt deps --project-dir dbt/TrinoIngestionDbt --profiles-dir dbt/TrinoIngestionDbt
          if [ -f /prod_manifest/manifest.json ]; then
            echo "Manifest file found. Running dbt build with --state prod_manifest"
            dbt build --select "state:modified" --project-dir dbt/TrinoIngestionDbt --profiles-dir dbt/TrinoIngestionDbt --defer --favor-state --state /prod_manifest
          else
            echo "No manifest file found. Running full dbt build"
            dbt build --project-dir dbt/TrinoIngestionDbt --profiles-dir dbt/TrinoIngestionDbt
          fi

  run-on-postgres-changed:
    runs-on: ubuntu-latest
    needs:
      - filter
      - run-on-trino-changed
    if: ${{ always() }}
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install dbt-core==1.8.2 dbt-postgres==1.8.3 awscli

      - name: Test Changed Models
        env:
          DBT_HOST: ${{ secrets.DBT_HOST }}
          DBT_USER: ${{ secrets.DBT_USER }}
          DBT_PASSWORD: ${{ secrets.DBT_PASSWORD }}
          DBT_DBNAME: ${{ secrets.DBT_DBNAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          MANIFEST_S3_PATH: ${{ secrets.MANIFEST_S3_PATH_DBT }}
          RUN_ID: ${{ github.run_id }}
        run: |
          echo "S3 Manifest Path=$MANIFEST_S3_PATH"
          echo "Setting DBT_SCHEMA dynamically"
          export DBT_SCHEMA="dbt_pr_$RUN_ID"
          echo "Checking if DBT manifest exists in S3"
          aws s3 cp $MANIFEST_S3_PATH /prod_manifest/manifest.json || echo "Manifest not found, skipping download"
          dbt deps --project-dir dbt/PostgresDbt --profiles-dir dbt/PostgresDbt
          if [ -f /prod_manifest/manifest.json ]; then
            echo "Manifest file found. Running dbt build with --state prod_manifest"
            dbt build --select "state:modified" --project-dir dbt/PostgresDbt --profiles-dir dbt/PostgresDbt --defer --state /prod_manifest
          else
            echo "No manifest file found. Running full dbt build"
            dbt build --project-dir dbt/PostgresDbt --profiles-dir dbt/PostgresDbt
          fi

